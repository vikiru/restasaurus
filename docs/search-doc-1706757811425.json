{
    "searchDocs": [
        {
            "title": "Dinosaurs by Name",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/dinosaursByName/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoints and Description​",
            "type": 1,
            "pageTitle": "Dinosaurs by Name",
            "url": "/restasaurus/endpoints/dinosaursByName/#api-endpoints-and-description",
            "content": " GET {baseUrl}/api/v1/dinosaurs/{name}  Returns a dinosaur matching a specific name, returns an error if not found.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Dinosaurs by Name",
            "url": "/restasaurus/endpoints/dinosaursByName/#parameters",
            "content": " name: The name corresponding to the dinosaur you wish to retrieve.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Dinosaurs by Name",
            "url": "/restasaurus/endpoints/dinosaursByName/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Dinosaurs by Locomotion",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/dinosaursByLocomotion/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoints and Description​",
            "type": 1,
            "pageTitle": "Dinosaurs by Locomotion",
            "url": "/restasaurus/endpoints/dinosaursByLocomotion/#api-endpoints-and-description",
            "content": " GET {baseUrl}/api/v1/dinosaurs/{locomotion}  Returns all dinosaurs matching a specific locomotion type.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Dinosaurs by Locomotion",
            "url": "/restasaurus/endpoints/dinosaursByLocomotion/#parameters",
            "content": " locomotion: The locomotion of the dinosaurs you wish to retrieve.  Examples include: biped, quadruped, facultative biped, gliding, swimming, etc.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Dinosaurs by Locomotion",
            "url": "/restasaurus/endpoints/dinosaursByLocomotion/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "All Images",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/allImages/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoint and Description​",
            "type": 1,
            "pageTitle": "All Images",
            "url": "/restasaurus/endpoints/allImages/#api-endpoint-and-description",
            "content": " GET {baseUrl}/api/v1/images?page={page}  Returns all dinosaur images within the API, 50 dinosaurs per page.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "All Images",
            "url": "/restasaurus/endpoints/allImages/#parameters",
            "content": " page: The page number to retrieve, 50 dinosaur images are displayed per page.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "All Images",
            "url": "/restasaurus/endpoints/allImages/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "All Dinosaurs",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/allDinosaurs/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoint and Description​",
            "type": 1,
            "pageTitle": "All Dinosaurs",
            "url": "/restasaurus/endpoints/allDinosaurs/#api-endpoint-and-description",
            "content": " GET {baseUrl}/api/v1/dinosaurs?page={page}  Returns all dinosaurs within the API, 50 dinosaurs per page.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "All Dinosaurs",
            "url": "/restasaurus/endpoints/allDinosaurs/#parameters",
            "content": " page: The page number to retrieve, 50 dinosaurs are displayed per page.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "All Dinosaurs",
            "url": "/restasaurus/endpoints/allDinosaurs/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Diets",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/diets/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoint and Description​",
            "type": 1,
            "pageTitle": "Diets",
            "url": "/restasaurus/endpoints/diets/#api-endpoint-and-description",
            "content": " GET {baseUrl}/api/v1/diets  Returns all dinosaur diets that exist within the API.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Diets",
            "url": "/restasaurus/endpoints/diets/#parameters",
            "content": " No parameters are required for this endpoint.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Diets",
            "url": "/restasaurus/endpoints/diets/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Image by ID",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/imagesByID/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoint and Description​",
            "type": 1,
            "pageTitle": "Image by ID",
            "url": "/restasaurus/endpoints/imagesByID/#api-endpoint-and-description",
            "content": " GET {baseUrl}/api/v1/images/{id}  Returns a dinosaur image matching a specific id, returns an error if not found.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Image by ID",
            "url": "/restasaurus/endpoints/imagesByID/#parameters",
            "content": " id: The id corresponding to the dinosaur image you wish to retrieve. Must be an integer between 1 and 1153.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Image by ID",
            "url": "/restasaurus/endpoints/imagesByID/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Clades",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/clades/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoint and Description​",
            "type": 1,
            "pageTitle": "Clades",
            "url": "/restasaurus/endpoints/clades/#api-endpoint-and-description",
            "content": " GET {baseUrl}/api/v1/clades  Returns all dinosaur clades that exist within the API.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Clades",
            "url": "/restasaurus/endpoints/clades/#parameters",
            "content": " No parameters are required for this endpoint.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Clades",
            "url": "/restasaurus/endpoints/clades/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Locomotions",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/locomotions/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoint and Description​",
            "type": 1,
            "pageTitle": "Locomotions",
            "url": "/restasaurus/endpoints/locomotions/#api-endpoint-and-description",
            "content": " GET {baseUrl}/api/v1/locomotions  Returns all dinosaur locomotions that exist within the API.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Locomotions",
            "url": "/restasaurus/endpoints/locomotions/#parameters",
            "content": " No parameters are required for this endpoint.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Locomotions",
            "url": "/restasaurus/endpoints/locomotions/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Names",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/names/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoint and Description​",
            "type": 1,
            "pageTitle": "Names",
            "url": "/restasaurus/endpoints/names/#api-endpoint-and-description",
            "content": " GET {baseUrl}/api/v1/names  Returns all dinosaur names that exist within the API.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Names",
            "url": "/restasaurus/endpoints/names/#parameters",
            "content": " No parameters are required for this endpoint.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Names",
            "url": "/restasaurus/endpoints/names/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Random Dinosaurs",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/randomDinosaurs/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoints and Description​",
            "type": 1,
            "pageTitle": "Random Dinosaurs",
            "url": "/restasaurus/endpoints/randomDinosaurs/#api-endpoints-and-description",
            "content": " GET {baseUrl}/api/v1/dinosaurs/random/{count}  Returns a random number of dinosaurs. Minimum of 1 and maximum of 10.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Random Dinosaurs",
            "url": "/restasaurus/endpoints/randomDinosaurs/#parameters",
            "content": " count: The number of random dinosaurs you wish to retrieve. Must be a valid integer between 1 and including 10.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Random Dinosaurs",
            "url": "/restasaurus/endpoints/randomDinosaurs/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Random Images",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/randomImages/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoint and Description​",
            "type": 1,
            "pageTitle": "Random Images",
            "url": "/restasaurus/endpoints/randomImages/#api-endpoint-and-description",
            "content": " GET {baseUrl}/api/v1/images/random/{count}  Returns a random number of dinosaur images. Minimum of 1 and maximum of 10.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Random Images",
            "url": "/restasaurus/endpoints/randomImages/#parameters",
            "content": " count: The number of random dinosaur images you wish to retrieve. Must be a valid integer between 1 and including 10.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Random Images",
            "url": "/restasaurus/endpoints/randomImages/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "✨ Acknowledgements",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/acknowledgments/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "✨ Acknowledgements​",
            "type": 1,
            "pageTitle": "✨ Acknowledgements",
            "url": "/restasaurus/acknowledgments/#-acknowledgements",
            "content": " DocusaurusRedocusaurusGitHub PagesSwagger EditorSwagger DocumentationChai DocumentationExpress DocumentationMocha DocumentationMongoDB DocumentationMongoose DocumentationSinon DocumentationShields Badgesregex101Favicon Generator  Additionally, this API would not be possible without the dinosaur information and image information retrieved from all of the Wikipedia articles accessed through the Wikipedia API. All images and text provided by this API belong to their respective authors. ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "📝 Prerequisites",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/prerequisites/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "📝 Prerequisites​",
            "type": 1,
            "pageTitle": "📝 Prerequisites",
            "url": "/restasaurus/prerequisites/#-prerequisites",
            "content": " Ensure that the following dependencies are installed onto your machine by following the Setup Instructions.  Node.jsExpressMongoDBMongoose ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "🚀 Run",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/run/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "🚀 Run​",
            "type": 1,
            "pageTitle": "🚀 Run",
            "url": "/restasaurus/run/#-run",
            "content": " The API can be started via one of the following commands:  Start the API in development env, with nodemon.  npm run dev   Start the API in production env, without nodemon.  npm start  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Home",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/home/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoint and Description​",
            "type": 1,
            "pageTitle": "Home",
            "url": "/restasaurus/endpoints/home/#api-endpoint-and-description",
            "content": " GET {baseUrl}/api/v1  Returns the home endpoint of the API.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Home",
            "url": "/restasaurus/endpoints/home/#parameters",
            "content": " No parameters are required for this endpoint.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Home",
            "url": "/restasaurus/endpoints/home/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "🧩 Model Overview",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/models/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "📖 Table of Contents​",
            "type": 1,
            "pageTitle": "🧩 Model Overview",
            "url": "/restasaurus/models/#-table-of-contents",
            "content": " 📖 Table of Contents🦖 Dinosaur Model🔍 ClassificationInfo Model📸 DinosaurImage Model📚 DinosaurSource Model  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "🦖 Dinosaur Model​",
            "type": 1,
            "pageTitle": "🧩 Model Overview",
            "url": "/restasaurus/models/#-dinosaur-model",
            "content": " Dinosaur: This model represents a dinosaur, including its unique properties such as name, temporal range, diet, locomotion type, and a description.  An example of a Dinosaur model stored within the MongoDB database is shown below, with all of its relevant properties. It should be noted that although classificationInfo, image, source show their value as being an ObjectId, when the API processes requests, these fields are populated with the relevant sub-documents which can be seen further down below.  { &quot;id&quot;: 1118, &quot;name&quot;: &quot;Zephyrosaurus&quot;, &quot;temporalRange&quot;: &quot;Early Cretaceous, ~113 Ma&quot;, &quot;diet&quot;: &quot;herbivore&quot;, &quot;locomotionType&quot;: &quot;biped&quot;, &quot;description&quot;: &quot;Zephyrosaurus (meaning \\&quot;westward wind lizard\\&quot;) is a genus of orodromine ornithischian dinosaur. It is based on a partial skull and postcranial fragments discovered in the Aptian-Albian-age Lower Cretaceous Cloverly Formation of Carbon County, Montana, USA. New remains are under description, and tracks from Maryland and Virginia, also in the US, have been attributed to animals similar to Zephyrosaurus. It lived approximately 113 mya.&quot;, &quot;classificationInfo&quot;: ObjectId(&quot;some-id-here&quot;), &quot;image&quot;: ObjectId(&quot;some-id-here&quot;), &quot;source&quot;: ObjectId(&quot;some-id-here&quot;), }   ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "🔍 ClassificationInfo Model​",
            "type": 1,
            "pageTitle": "🧩 Model Overview",
            "url": "/restasaurus/models/#-classificationinfo-model",
            "content": " ClassificationInfo: This model contains the classification information of a dinosaur, including details like its family, order, and genus.  An example of a ClassificationInfo model is shown below.  &quot;classificationInfo&quot;: { &quot;domain&quot;: &quot;Eukaryota&quot;, &quot;kingdom&quot;: &quot;Animalia&quot;, &quot;phylum&quot;: &quot;Chordata&quot;, &quot;clade&quot;: [ &quot;Dinosauria&quot;, &quot;Ornithischia&quot; ], &quot;classInfo&quot;: [], &quot;orderInfo&quot;: [], &quot;familyInfo&quot;: [ { &quot;familyType&quot;: &quot;Family&quot;, &quot;value&quot;: &quot;Thescelosauridae&quot; }, { &quot;familyType&quot;: &quot;Subfamily&quot;, &quot;value&quot;: &quot;Orodrominae&quot; } ], &quot;tribeInfo&quot;: [], &quot;genusInfo&quot;: [ { &quot;genusType&quot;: &quot;Genus&quot;, &quot;value&quot;: &quot;Zephyrosaurus&quot; } ], &quot;speciesInfo&quot;: [] }   ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "📸 DinosaurImage Model​",
            "type": 1,
            "pageTitle": "🧩 Model Overview",
            "url": "/restasaurus/models/#-dinosaurimage-model",
            "content": " DinosaurImage: This model is used to store the image data related to a dinosaur, including the image source and attribution details.  An example of a DinosaurImage model is shown below.  &quot;image&quot;: { &quot;title&quot;: &quot;Zephyrosaurus in Copenhagen&quot;, &quot;description&quot;: &quot;Zephyrosaurus skeleton, Natural History Museum of Denmark, Copenhagen.&quot;, &quot;author&quot;: &quot;FunkMonk&quot;, &quot;authorURL&quot;: &quot;https://commons.wikimedia.org/wiki/User:FunkMonk&quot;, &quot;imageURL&quot;: &quot;https://commons.wikimedia.org/wiki/File:Zephyrosaurus_in_Copenhagen.jpg&quot;, &quot;license&quot;: &quot;Creative Commons Attribution-Share Alike 3.0&quot;, &quot;licenseURL&quot;: &quot;https://creativecommons.org/licenses/by-sa/3.0&quot;, &quot;dateCreated&quot;: &quot;2021-10-01T07:58:48.000Z&quot;, &quot;dateAccessed&quot;: &quot;2024-01-30T14:27:20.683Z&quot; },   ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "📚 DinosaurSource Model​",
            "type": 1,
            "pageTitle": "🧩 Model Overview",
            "url": "/restasaurus/models/#-dinosaursource-model",
            "content": " DinosaurSource: This model represents the source of the dinosaur data, which is the Wikipedia article for that particular dinosaur. This includes information such as the title, author, last revision date, revision history url, and more.  An example of a DinosaurSource model is shown below.  &quot;source&quot;: { &quot;pageTitle&quot;: &quot;Zephyrosaurus&quot;, &quot;author&quot;: &quot;Wikipedia contributors&quot;, &quot;wikipediaURL&quot;: &quot;https://en.wikipedia.org/wiki/Zephyrosaurus&quot;, &quot;license&quot;: &quot;Creative Commons Attribution-Share Alike 4.0&quot;, &quot;licenseURL&quot;: &quot;https://creativecommons.org/licenses/by-sa/4.0/deed.en&quot;, &quot;permalink&quot;: &quot;https://en.wikipedia.org/w/index.php?title=Zephyrosaurus&amp;oldid=1187326953&quot;, &quot;revisionHistoryURL&quot;: &quot;https://en.wikipedia.org/w/index.php?title=Zephyrosaurus&amp;action=history&quot;, &quot;lastRevision&quot;: &quot;2023-11-28T15:28:47Z&quot;, &quot;dateAccessed&quot;: &quot;2024-01-30T14:27:20.682Z&quot;, &quot;source&quot;: &quot;Wikipedia, The Free Encyclopedia&quot;, &quot;publisher&quot;: &quot;Wikimedia Foundation&quot;, &quot;citation&quot;: &quot;Wikipedia contributors. \\&quot;Zephyrosaurus.\\&quot; Wikipedia, The Free Encyclopedia. Wikimedia Foundation, 28 Nov 2023. Web. 30 Jan 2024.&quot; }  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Dinosaurs by Query",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/dinosaursByQuery/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoints and Description​",
            "type": 1,
            "pageTitle": "Dinosaurs by Query",
            "url": "/restasaurus/endpoints/dinosaursByQuery/#api-endpoints-and-description",
            "content": " GET {baseUrl}/api/v1/search?clade={clade}&amp;diet={diet}&amp;locomotion={locomotion}  Returns all dinosaurs matching a specific query.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Dinosaurs by Query",
            "url": "/restasaurus/endpoints/dinosaursByQuery/#parameters",
            "content": " All parameters are optional, however, if no parameters are passed to the API then an error message will be returned as a response.  clade: The group that the dinosaur belongs to within its classification. This can be passed in various ways: GET {baseUrl}/api/v1/search?clade=clade1,clade2GET {baseUrl}/api/v1/search?clade=clade1&amp;clade=clade2 NOTE: The result will contain dinosaurs that belong to any of the clades passed via this endpoint. Some of these clades may conflict with diet and locomotion if they are provided as well (i.e. passing Theropoda as a clade, with herbivore as a diet wont work as Theropoda consists of carnivores.) diet: The diet of the dinosaurs you wish to retrieve. locomotion: The locomotion of the dinosaurs you wish to retrieve.  Example clade include: Therapoda, Sauropodamorpha, Ornithischia, Thyreophora, etc.  Example diet include: herbivore, carnivore, omnivore, piscivore, etc.  Example locomotion include: biped, quadruped, facultative biped, gliding, swimming, etc.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Dinosaurs by Query",
            "url": "/restasaurus/endpoints/dinosaursByQuery/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "📜 Available Scripts",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/scripts/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "📜 Available Scripts​",
            "type": 1,
            "pageTitle": "📜 Available Scripts",
            "url": "/restasaurus/scripts/#-available-scripts",
            "content": " Start the API in production env, without nodemon.  npm start   Start the API in development env, with nodemon.  npm run dev   Run all tests.  npm test   Lint all files and check if there are any issues, with ESLint.  npm run lint   Fix all ESLint issues then format the files with Prettier.  npm run prettier   Retrieve all information needed for the API via Wikipedia directly from its API.  npm run retrieveData   Save all dinosaur information to your MongoDB database.  npm run postData   Create test coverage shields badges for README using istanbul-badges-readme.  npm run make-badges  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Endpoint Overview",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/overview/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "📖 Table of Contents​",
            "type": 1,
            "pageTitle": "Endpoint Overview",
            "url": "/restasaurus/overview/#-table-of-contents",
            "content": " note The API is currently configured to support only GET requests and responses from the API are only in json format. The current rate limit is set to 20 requests per hour.  📖 Table of Contents 📄 General Endpoints🦖 Dinosaur Endpoints📷 Image EndpointsOpenAPI Specification  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "📄 General Endpoints​",
            "type": 1,
            "pageTitle": "Endpoint Overview",
            "url": "/restasaurus/overview/#-general-endpoints",
            "content": " Get main API endpoint: Returns the home endpoint of the API.Get all dinosaur clades: Returns all dinosaur clades that exist within the API.Get all dinosaur diets: Returns all dinosaur diets that exist within the API.Get all dinosaur locomotions: Returns all dinosaur locomotions that exist within the API.Get all dinosaur names: Returns all dinosaur names that exist within the API.  ",
            "version": "Next",
            "tagName": "h3"
        },
        {
            "title": "🦖 Dinosaur Endpoints​",
            "type": 1,
            "pageTitle": "Endpoint Overview",
            "url": "/restasaurus/overview/#-dinosaur-endpoints",
            "content": " Get all dinosaurs: Returns all dinosaurs within the API, 50 dinosaurs per page.Get a dinosaur by ID: Returns a dinosaur matching a specific id, returns an error if not found.Get a dinosaur by name: Returns a dinosaur matching a specific name, returns an error if not found.Get dinosaurs by diet: Returns all dinosaurs matching a specific diet.Get dinosaurs by locomotion: Returns all dinosaurs matching a specific locomotion type.Get random dinosaurs: Returns a random number of dinosaurs. Minimum of 1 and maximum of 10.Get dinosaurs by query: Returns all dinosaurs matching a specific query.  ",
            "version": "Next",
            "tagName": "h3"
        },
        {
            "title": "📷 Image Endpoints​",
            "type": 1,
            "pageTitle": "Endpoint Overview",
            "url": "/restasaurus/overview/#-image-endpoints",
            "content": " Get all dinosaur images: Returns all dinosaur images within the API, 50 dinosaurs per page.Get a image by ID: Returns a dinosaur image matching a specific id, returns an error if not found.Get random number of dinosaur images: Returns a random number of dinosaur images. Minimum of 1 and maximum of 10.  ",
            "version": "Next",
            "tagName": "h3"
        },
        {
            "title": "OpenAPI Specification​",
            "type": 1,
            "pageTitle": "Endpoint Overview",
            "url": "/restasaurus/overview/#openapi-specification",
            "content": " To view more details about all endpoints such as the expected responses and status codes, please take a look at theOpenAPI Spec. ",
            "version": "Next",
            "tagName": "h3"
        },
        {
            "title": "🔍 Testing",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/test/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "🔍 Testing​",
            "type": 1,
            "pageTitle": "🔍 Testing",
            "url": "/restasaurus/test/#-testing",
            "content": " Statements\tBranches\tFunctions\tLines   The comprehensive suite of tests for this project is housed within the test directory. These tests are primarily designed to verify the functionality and reliability of the API and additionally, the scripts used to retrieve the information.  The tests can be run with the following command:  npm test  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "⚡ Setup",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/setup/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "⚡ Setup Instructions​",
            "type": 1,
            "pageTitle": "⚡ Setup",
            "url": "/restasaurus/setup/#-setup-instructions",
            "content": " ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Environment Setup​",
            "type": 1,
            "pageTitle": "⚡ Setup",
            "url": "/restasaurus/setup/#environment-setup",
            "content": " Clone this repository to your local machine.  git clone https://github.com/vikiru/restasaurus.git cd restasaurus   Download and install all required dependencies.  npm install   Setup your .env file with the required information.  PORT=YOUR-PORT-HERE MONGODB_URI='YOUR-MONGODB-URI-HERE' NODE_ENV='development'   ",
            "version": "Next",
            "tagName": "h3"
        },
        {
            "title": "Retrieving data from Wikipedia via its API​",
            "type": 1,
            "pageTitle": "⚡ Setup",
            "url": "/restasaurus/setup/#retrieving-data-from-wikipedia-via-its-api",
            "content": " Run the retrieveData script to retrieve all dinosaur information.  npm run retrieveData   This script will retrieve information about dinosaurs from Wikipedia via its API and then process that data to construct a JSON object represented by MongooseData.  Please check the app/logs directory in the event of any errors. Specifically, you can check the errors.log or all.log to view the errors or all levels of logging, respectively.  Additionally, confirm that app/scripts/ contains the following JSON files:  allDinoNames.json: contains all dinosaur names (should be around 1427 names).filteredNames.json: contains the names of the dinosaurs that passed the filtering process (should be around 1153 names).htmlData.json: contains the raw HTML for each Wikipedia article as a String.imageData.json: contains the image data for each Dinosaur.pageData.json: contains the page data for each Wikipedia article.dinosaurData.json: contains the processed data of all dinosaurs.  ",
            "version": "Next",
            "tagName": "h3"
        },
        {
            "title": "Saving the processed data to the MongoDB database​",
            "type": 1,
            "pageTitle": "⚡ Setup",
            "url": "/restasaurus/setup/#saving-the-processed-data-to-the-mongodb-database",
            "content": " Run the postData script to save all dinosaurs to your MongoDB database, once retrieveData was successful.  npm run postData   Please check your MongoDB database collections and ensure that the dinosaurs were saved successfully.  There should be 5 collections:  classificationinfos: This collection contains all of the ClassificationInfo documents.counters: This collection is auto-created and allows for auto-indexing of documents.dinosaurimages: This collection contains all of the DinosaurImage documents.dinosaurs: This is the main collection which contains all of the Dinosaur documents.dinosaursources: This collection contains all of the DinosaurSource documents.  After completing these steps, the API should be ready for launch, with all endpoints fully operational. 🎉 ",
            "version": "Next",
            "tagName": "h3"
        },
        {
            "title": "Dinosaurs by Diet",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/dinosaursByDiet/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoints and Description​",
            "type": 1,
            "pageTitle": "Dinosaurs by Diet",
            "url": "/restasaurus/endpoints/dinosaursByDiet/#api-endpoints-and-description",
            "content": " GET {baseUrl}/api/v1/dinosaurs/{diet}  Returns all dinosaurs matching a specific diet.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Dinosaurs by Diet",
            "url": "/restasaurus/endpoints/dinosaursByDiet/#parameters",
            "content": " diet: The diet of the dinosaurs you wish to retrieve.  Examples include: herbivore, carnivore, omnivore, piscivore, etc.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Dinosaurs by Diet",
            "url": "/restasaurus/endpoints/dinosaursByDiet/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "🛠️ Tech Stack",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/stack/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "🛠️ Tech Stack​",
            "type": 1,
            "pageTitle": "🛠️ Tech Stack",
            "url": "/restasaurus/stack/#️-tech-stack",
            "content": " Backend:  Node.jsExpress various middlewares as seen here WinstonMongoDBMongoose  Testing:  MochaChaiSinonProxyquireIstanbul (nyc)istanbul-badges-readme  Documentation:  Docs are built using Docusaurus OpenAPI Specification Converted to .md using: Redocusaurus Documentation site hosted via GitHub Pages  REST API  Adaptable  CI:  GitHub Actions  Dev Tools:  ESLintPrettierWakaTimeMongoDB CompassPostman ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Dinosaurs by ID",
            "type": 0,
            "sectionRef": "#",
            "url": "/restasaurus/endpoints/dinosaursByID/",
            "content": "",
            "keywords": "RESTasaurus  REST  API  Express  MongoDB  Mongoose  Dinosaurs",
            "version": "Next"
        },
        {
            "title": "API Endpoints and Description​",
            "type": 1,
            "pageTitle": "Dinosaurs by ID",
            "url": "/restasaurus/endpoints/dinosaursByID/#api-endpoints-and-description",
            "content": " GET {baseUrl}/api/v1/dinosaurs/{id}  Returns a dinosaur matching a specific id, returns an error if not found.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Parameters​",
            "type": 1,
            "pageTitle": "Dinosaurs by ID",
            "url": "/restasaurus/endpoints/dinosaursByID/#parameters",
            "content": " id: The id corresponding to the dinosaur you wish to retrieve. Must be an integer between 1 and 1153.  ",
            "version": "Next",
            "tagName": "h2"
        },
        {
            "title": "Demo​",
            "type": 1,
            "pageTitle": "Dinosaurs by ID",
            "url": "/restasaurus/endpoints/dinosaursByID/#demo",
            "content": "  ",
            "version": "Next",
            "tagName": "h2"
        }
    ],
    "options": { "id": "default" }
}
